@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Graph;
@inject HttpClient Http

@page "/"

<PageTitle>Index</PageTitle>

<h1>Welcome to User Sign In ASP.NET Core Blazor WebAssembly</h1>

<AuthorizeView>
  <NotAuthorized>
    <div>This page can be accessed by all users, authenticated or not.</div>
    <p>Click <a href="authentication/login">Log in</a> to sign into the application. Navigating to it while not logged in will automatically initiate the login process. Please note that it doesn't require that your user has any specific application roles assigned, and will access Microsoft Graph on your behalf.</p>
  </NotAuthorized>
  <Authorized>
    You are now signed-in.

    @if (user != null)
    {
         <p>Display Name: @user.DisplayName</p>
         <p>Business Phone: @user.BusinessPhones.FirstOrDefault()</p>
         <p>Given Name: @user.GivenName</p>
         <p>id: @user.Id</p>
    }

    @code {
      private User user;

      protected override async Task OnInitializedAsync()
      {
        try
        {
          user = await Http.GetFromJsonAsync<User>("https://graph.microsoft.com/v1.0/me");
        }
        catch (AccessTokenNotAvailableException exception)
        {
          exception.Redirect();
        }
      }
    }
  </Authorized>
</AuthorizeView>

name: Verify Dependabot Update (.NET)

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  build-winui:
    runs-on: windows-latest  # Use Windows runner for WinUI projects

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'  # Specify your .NET version

      # Restore, Build, and Test WinUI Project
      - name: Restore and Build WinUI Project
        run: |
          dotnet restore desktop-winui/WinUIApp.csproj
          dotnet build desktop-winui/WinUIApp.csproj --no-restore --configuration Release
          dotnet test desktop-winui/WinUIApp.csproj --no-build --configuration Release

  build-maui:
    runs-on: windows-latest  # MAUI requires Windows for Android builds

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'  # Specify your .NET version

      # Install MAUI-specific workloads (android and wasm-tools)
      - name: Install MAUI Workloads
        run: |
          dotnet workload install android
          dotnet workload install wasm-tools

      # Restore, Build, and Test MAUI Project
      - name: Restore and Build MAUI Project
        run: |
          dotnet workload restore xplat-maui/XPlat.csproj  # Restore necessary workloads
          dotnet restore xplat-maui/XPlat.csproj           # Restore dependencies
          dotnet build xplat-maui/XPlat.csproj --no-restore --configuration Release
          dotnet test xplat-maui/XPlat.csproj --no-build --configuration Release

  build:
    runs-on: ubuntu-latest  # Use Ubuntu for other project types if they don't need Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # Restore, Build, and Test All Other Projects (excluding WinUI and MAUI)
      - name: Restore, Build, and Test All Other Projects
        run: |
          for project in $(find . -name '*.csproj' | grep -v 'desktop-winui' | grep -v 'xplat-maui'); do
            echo "Processing project: $project"
            dotnet restore $project
            dotnet build $project --no-restore --configuration Release
            dotnet test $project --no-build --configuration Release
          done

  # Job to enable auto-merge after all tests pass
  auto-merge:
    needs: [build-winui, build-maui, build]  # Ensure all other jobs complete first
    runs-on: ubuntu-latest

    steps:
      - name: Enable auto-merge for Dependabot PRs
        if: github.actor == 'dependabot[bot]' && success()  # Only auto-merge Dependabot PRs that pass tests
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash  # Choose your preferred merge method: squash, rebase, merge
